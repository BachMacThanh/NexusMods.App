<Styles xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:icons="clr-namespace:NexusMods.Icons;assembly=NexusMods.Icons"
        xmlns:controls="clr-namespace:NexusMods.App.UI.Controls;assembly=NexusMods.App.UI">

    <!-- Preview -->
    <Design.PreviewWith>

        <Border Padding="16" Classes="Low">
            <StackPanel Orientation="Vertical">
                <TextBlock Text="Test Area" Theme="{StaticResource HeadingMDSemiTheme}" />
                <StackPanel>
                    <Button Content="Button"/>
                    <controls:StandardButton IsEnabled="True" Text="Enabled" ShowIcon="Left"
                                             LeftIcon="{x:Static icons:IconValues.Check}" />
                    <controls:StandardButton IsEnabled="True" Text="Enabled" ShowIcon="Left"
                                             LeftIcon="{x:Static icons:IconValues.Check}" Size="Medium" />
                    <controls:StandardButton IsEnabled="False" Text="Disabled" ShowIcon="Left"
                                             LeftIcon="{x:Static icons:IconValues.Close}" />
                    <controls:StandardButton ShowIcon="Both" />
                    <controls:StandardButton />
                    <controls:StandardButton ShowIcon="Left" Text="Something" HorizontalAlignment="Stretch"
                                             LeftIcon="{x:Static icons:IconValues.PlayArrow}" />
                    <controls:StandardButton ShowIcon="Both" ShowLabel="False" />
                    <controls:StandardButton ShowIcon="Left" ShowLabel="False" />
                    <controls:StandardButton ShowIcon="Left" ShowLabel="True" Size="Small"  />
                    <controls:StandardButton Text="This is WeakAlt" Type="Tertiary" Fill="WeakAlt" />
                </StackPanel>
                <TextBlock Text="System" Theme="{StaticResource HeadingMDSemiTheme}" />
                <StackPanel Orientation="Horizontal" Spacing="24">
                    <StackPanel>
                        <TextBlock Text="Primary" Theme="{StaticResource HeadingSMSemiTheme}" />
                        <StackPanel>
                            <TextBlock Text="Size=Medium" Theme="{StaticResource BodyMDSemiTheme}" />
                            <controls:StandardButton Text="Strong" Type="Primary" Fill="Strong" />
                            <controls:StandardButton Text="Weak" Type="Primary" Fill="Weak" />
                        </StackPanel>
                        <StackPanel>
                            <TextBlock Text="Size=Small" Theme="{StaticResource BodyMDSemiTheme}" />
                            <controls:StandardButton Text="Strong" Type="Primary" Fill="Strong" Size="Small" />
                            <controls:StandardButton Text="Weak" Type="Primary" Fill="Weak" Size="Small" />
                        </StackPanel>
                    </StackPanel>
                    <StackPanel>
                        <TextBlock Text="Secondary" Theme="{StaticResource HeadingSMSemiTheme}" />
                        <StackPanel>
                            <TextBlock Text="Size=Medium" Theme="{StaticResource BodyMDSemiTheme}" />
                            <controls:StandardButton Text="Strong" Type="Secondary" Fill="Strong" />
                            <controls:StandardButton Text="Weak" Type="Secondary" Fill="Weak" />
                            <controls:StandardButton Text="None" Type="Secondary" Fill="None" />
                        </StackPanel>
                        <StackPanel>
                            <TextBlock Text="Size=Small" Theme="{StaticResource BodyMDSemiTheme}" />
                            <controls:StandardButton Text="Strong" Type="Secondary" Fill="Strong" Size="Small" />
                            <controls:StandardButton Text="Weak" Type="Secondary" Fill="Weak" Size="Small" />
                            <controls:StandardButton Text="None" Type="Secondary" Fill="None" Size="Small" />
                        </StackPanel>
                    </StackPanel>
                    <StackPanel>
                        <TextBlock Text="Tertiary" Theme="{StaticResource HeadingSMSemiTheme}" />
                        <StackPanel>
                            <TextBlock Text="Size=Medium" Theme="{StaticResource BodyMDSemiTheme}" />
                            <controls:StandardButton Text="WeakAlt" Type="Tertiary" Fill="WeakAlt" />
                            <controls:StandardButton Text="Weak" Type="Tertiary" Fill="Weak" />
                            <controls:StandardButton Text="None" Type="Tertiary" Fill="None" />
                        </StackPanel>
                        <StackPanel>
                            <TextBlock Text="Size=Small" Theme="{StaticResource BodyMDSemiTheme}" />
                            <controls:StandardButton Text="WeakAlt" Type="Tertiary" Fill="WeakAlt" Size="Small" />
                            <controls:StandardButton Text="Weak" Type="Tertiary" Fill="Weak" Size="Small" />
                            <controls:StandardButton Text="None" Type="Tertiary" Fill="None" Size="Small" />
                        </StackPanel>
                    </StackPanel>
                </StackPanel>
            </StackPanel>
        </Border>
    </Design.PreviewWith>

    <!-- Style Definitions-->

    <Style Selector=":is(controls|StandardButton)">
        <!-- Use `:is(controls|StandardButton)` to match StandardButton and all its subclasses, -->
        <!-- otherwise all subclasses would need to have the style key override set to `StandardButton`. -->
        <!-- If StyleKeyOverride of a subclass is set, it becomes impossible to select that specific subclass, -->
        <!-- to add more specific styles to it.  -->

        <!-- start of default button styles to match avalonia's default
        https://github.com/AvaloniaUI/Avalonia/blob/master/src/Avalonia.Themes.Fluent/Controls/Button.xaml-->
        <Setter Property="Background" Value="{StaticResource ButtonBackground}" />
        <Setter Property="Foreground" Value="{StaticResource ButtonForeground}" />
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource ButtonBorderThemeThickness}" />
        <Setter Property="CornerRadius" Value="{StaticResource ControlCornerRadius}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="RenderTransform" Value="none" />
        <Setter Property="Transitions">
            <Transitions>
                <TransformOperationsTransition Property="RenderTransform" Duration="0:0:.075" />
            </Transitions>
        </Setter>
        <!-- end default button styles -->

        <Setter Property="Template">
            <ControlTemplate>
                <Panel>
                    <!-- this is only shown if Content is set -->
                    <ContentPresenter x:Name="PART_ContentPresenter"
                                      Background="{TemplateBinding Background}"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      BorderThickness="{TemplateBinding BorderThickness}"
                                      CornerRadius="{TemplateBinding CornerRadius}"
                                      Content="{TemplateBinding Content}"
                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                      Padding="{TemplateBinding Padding}"
                                      RecognizesAccessKey="True"
                                      HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalAlignment}" />

                    <!-- this is used when Content isn't set (used for normal buttons) -->
                    <Border Name="PART_Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            Padding="{TemplateBinding Padding}">
                        <StackPanel Orientation="Horizontal" 
                                    VerticalAlignment="Center" 
                                    HorizontalAlignment="Center">
                            <icons:UnifiedIcon Name="PART_LeftIcon" />
                            <TextBlock Name="PART_Label" Text="{TemplateBinding Text}" />
                            <icons:UnifiedIcon Name="PART_RightIcon" />
                        </StackPanel>
                    </Border>
                </Panel>
            </ControlTemplate>
        </Setter>

        <!-- Set the default avalonia button styles -->
        <Style Selector="^:pointerover">
            <Setter Property="Background" Value="{StaticResource ButtonBackgroundPointerOver}" />
            <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrushPointerOver}" />
            <Setter Property="Foreground" Value="{StaticResource ButtonForegroundPointerOver}" />
        </Style>

        <Style Selector="^:pressed">
            <Setter Property="Background" Value="{StaticResource ButtonBackgroundPressed}" />
            <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrushPressed}" />
            <Setter Property="Foreground" Value="{StaticResource ButtonForegroundPressed}" />
        </Style>

        <Style Selector="^:disabled">
            <Setter Property="Background" Value="{StaticResource ButtonBackgroundDisabled}" />
            <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrushDisabled}" />
            <Setter Property="Foreground" Value="{StaticResource ButtonForegroundDisabled}" />
        </Style>

        <Style Selector="^:flyout-open">
            <Setter Property="Background" Value="{StaticResource ButtonBackgroundPointerOver}" />
            <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrushPointerOver}" />
            <Setter Property="Foreground" Value="{StaticResource ButtonForegroundPointerOver}" />
        </Style>
        <!-- end of default button styles -->


        <!-- start of our new default button styles -->
        <!-- these can also be overriden in NexusMods.Themes.NexusFluentDark -->

        <!-- all button states -->
        <Style Selector="^">
            <Setter Property="ClipToBounds" Value="False" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="CornerRadius" Value="{StaticResource Rounded}" />
            <Setter Property="BorderBrush" Value="{StaticResource SurfaceTransparentBrush}" />

            <Style Selector="^ StackPanel">
                <Setter Property="Spacing" Value="{StaticResource Spacing-1}"></Setter>
            </Style>

            <Style Selector="^ icons|UnifiedIcon">
                <Setter Property="Size" Value="16"/>
            </Style>

            <Style Selector="^ TextBlock">
                <!-- needs a little padding to fully match figma -->
                <Setter Property="Padding" Value="0" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <!-- NOTE: Spacing is handled through margin of icon and images as icons seem to behave strangely -->
            </Style>

            <Style Selector="^:disabled">
                <Setter Property="Opacity" Value="0.4" />
            </Style>

            <!-- icon only variants -->
            <Style Selector="^[ShowIcon=IconOnly]">
                <Setter Property="Padding" Value="0" />

                <!-- <Style Selector="^ /template/ Border"> -->
                <!--     ~1~ NOTE(insomnious): fixed size as we know how big the icons are @1@ -->
                <!--     <Setter Property="Height" Value="16" /> -->
                <!--     <Setter Property="Width" Value="16" /> -->
                <!-- </Style> -->
            </Style>
        </Style>

        <!-- small variants -->
        <Style Selector="^[Size=Medium]">
            <Setter Property="Padding" Value="{DynamicResource ButtonPaddingSmall}" />

            <Style Selector="^ StackPanel">
                <Setter Property="Spacing" Value="{StaticResource Spacing-1}"></Setter>
            </Style>


                <Style Selector="^ icons|UnifiedIcon">
                    <Setter Property="Size" Value="16"></Setter>
                </Style>

                <Style Selector="^ TextBlock">
                    <!-- needs a little horizontal padding to fully match figma -->
                    <Setter Property="Padding" Value="1 0" />
                    <Setter Property="Theme" Value="{StaticResource BodySMNormalTheme}" />
                </Style>

            <!-- icon only variants -->
            <Style Selector="^[ShowIcon=IconOnly]">
                <Setter Property="Padding" Value="0" />

                <Style Selector="^ /template/ Border">
                    <!-- NOTE(insomnious): fixed size as we know how big the icons are -->
                    <Setter Property="Height" Value="20" />
                    <Setter Property="Width" Value="20" />
                </Style>
            </Style>
        </Style>

        <!-- primary button -->
        <Style Selector="^[Type=Primary]">
            <Setter Property="Background" Value="{DynamicResource PrimaryModerateBrush}" />
            <Setter Property="Foreground" Value="{DynamicResource NeutralInvertedBrush}" />

            <Style Selector="^:pointerover">
                <Setter Property="Background" Value="{DynamicResource PrimaryStrongBrush}" />
            </Style>
            <Style Selector="^:pressed">
                <Setter Property="Background" Value="{DynamicResource PrimarySubduedBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource NeutralInvertedBrush}" />
            </Style>

            <Style Selector="^:disabled" />

            <!-- fill variants -->

            <Style Selector="^[Fill=Weak]">
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Background" Value="{DynamicResource InfoModerateBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource NeutralInvertedBrush}" />

                <Style Selector="^:pointerover">
                    <Setter Property="Background" Value="{DynamicResource InfoStrongBrush}" />
                </Style>
                <Style Selector="^:pressed">
                    <Setter Property="Background" Value="{DynamicResource InfoSubduedBrush}" />
                </Style>

                <Style Selector="^:disabled">
                    <Setter Property="Foreground" Value="{DynamicResource NeutralInvertedBrush}" />
                </Style>
            </Style>
        </Style>

        <!-- secondary button -->
        <Style Selector="^[Type=Secondary]">
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Background" Value="{DynamicResource SurfaceTransparentBrush}" />
            <Setter Property="Foreground" Value="{DynamicResource NeutralModerateBrush}" />
            <Setter Property="BorderBrush" Value="{DynamicResource StrokeTranslucentModerateBrush}" />

            <Style Selector="^:pointerover">
                <Setter Property="Background" Value="{DynamicResource SurfaceTranslucentHighBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource NeutralStrongBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource StrokeTranslucentStrongBrush}" />
            </Style>
            <Style Selector="^:pressed">
                <Setter Property="Background" Value="{DynamicResource SurfaceTranslucentLowBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource NeutralModerateBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource StrokeTranslucentModerateBrush}" />
            </Style>

            <Style Selector="^:disabled" />

            <!-- fill variants -->

            <Style Selector="^[Fill=Strong]">
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Background" Value="{DynamicResource NeutralStrongBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource NeutralInvertedBrush}" />

                <Style Selector="^:pointerover">
                    <Setter Property="Background" Value="{DynamicResource NeutralSubduedBrush}" />
                </Style>
                <Style Selector="^:pressed">
                    <Setter Property="Background" Value="{DynamicResource NeutralWeakBrush}" />
                </Style>

                <Style Selector="^:disabled" />
            </Style>

            <Style Selector="^[Fill=Weak]">
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Background" Value="{DynamicResource SurfaceTranslucentMidBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource NeutralModerateBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource StrokeTranslucentModerateBrush}" />

                <Style Selector="^:pointerover">
                    <Setter Property="Background" Value="{DynamicResource SurfaceTranslucentHighBrush}" />
                    <Setter Property="Foreground" Value="{DynamicResource NeutralStrongBrush}" />
                    <Setter Property="BorderBrush" Value="{DynamicResource StrokeTranslucentStrongBrush}" />
                </Style>
                <Style Selector="^:pressed">
                    <Setter Property="Background" Value="{DynamicResource SurfaceTranslucentLowBrush}" />
                    <Setter Property="Foreground" Value="{DynamicResource NeutralModerateBrush}" />
                    <Setter Property="BorderBrush" Value="{DynamicResource StrokeTranslucentModerateBrush}" />
                </Style>

                <Style Selector="^:disabled" />
            </Style>
        </Style>

        <!-- TERTIARY -->

        <Style Selector="^[Type=Tertiary]">
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Background" Value="{DynamicResource SurfaceTransparentBrush}" />
            <Setter Property="Foreground" Value="{DynamicResource NeutralModerateBrush}" />

            <Style Selector="^:pointerover">
                <Setter Property="Background" Value="{DynamicResource SurfaceTranslucentHighBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource NeutralStrongBrush}" />
            </Style>
            <Style Selector="^:pressed">
                <Setter Property="Background" Value="{DynamicResource SurfaceTranslucentLowBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource NeutralModerateBrush}" />
            </Style>

            <Style Selector="^:disabled" />

            <Style Selector="^:flyout-open">
                <Setter Property="Background" Value="{DynamicResource SurfaceTranslucentHighBrush}" />
            </Style>

            <!-- fill variants -->

            <Style Selector="^[Fill=Weak]">
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Background" Value="{DynamicResource SurfaceTranslucentMidBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource NeutralModerateBrush}" />

                <Style Selector="^:pointerover">
                    <Setter Property="Background" Value="{DynamicResource SurfaceTranslucentHighBrush}" />
                </Style>

                <Style Selector="^:pressed">
                    <Setter Property="Background" Value="{DynamicResource SurfaceTranslucentMidBrush}" />
                </Style>

                <Style Selector="^:disabled" />
            </Style>

            <Style Selector="^[Fill=WeakAlt]">
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Background" Value="{DynamicResource SurfaceMidBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource NeutralModerateBrush}" />

                <Style Selector="^:pointerover">
                    <Setter Property="Background" Value="{DynamicResource SurfaceHighBrush}" />
                </Style>

                <Style Selector="^:pressed">
                    <Setter Property="Background" Value="{DynamicResource SurfaceHighBrush}" />
                    <Setter Property="Opacity" Value="0.8" />
                </Style>

                <Style Selector="^:disabled" />
            </Style>
        </Style>

    </Style>
    
</Styles>
